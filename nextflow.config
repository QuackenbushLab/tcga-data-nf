
params {

  params.filter = "$projectDir/assets/NO_FILE"

  //dataDir = "data" to remove
  resultsDir = "results" // keep this local for testing
  batchName = "my-batch"
  pipeline = 'download'
  logInfoFile = 'log-info.txt'

  testDataFolder = "$baseDir/testdata"
  // Define the metadata tables

  // FULL PIPELINE
  full_metadata = "$baseDir/testdata/conf/full_json.json"

  // DOWNLOAD PIPELINE
  download_metadata = "$baseDir/testdata/conf/download_json.json"

  //metadata = "conf/metadata_expression.csv"

  // PREPARE PIPELINE
  recount.metadata_prepare = "$baseDir/testdata/conf/prepare_recount_metadata.csv"
  recount.norm =['tpm']
  recount.min_tpm=[1]
  recount.frac_samples=[0.0001,0.2]
  recount.th_purity=[0.00001,0.5]

  tissues{
    tcga_luad = ['all']
    tcga_blca = ['all']
    }

  batch_correction{
    tcga_coad = ['tcga.gdc_platform']
    }

  //filter.samples = 'testdata/tcga_luad_samples.txt'

  methylation.probe_map = "$baseDir/bin/r/local_assets/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv"//'s3://projectstcga/data/raw-data/mapping/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv'
  methylation.tf_list = "$baseDir/bin/r/local_assets/TF_names_v_1.01.txt" //'s3://projectstcga/data/raw-data/mapping/methylation/TF_names_v_1.01.txt'
  methylation.levine_exclusion = 's3://projectstcga/data/raw-data/mapping/methylation/levine_gene_exclusions.csv'

  methylation.metadata_prepare = "$baseDir/testdata/conf/prepare_methylation_metadata.csv"
  methylation.to_npn = 'FALSE'
  methylation.to_mval = 'TRUE'

  // ANALYZE PIPELINE
  metadata_expression = "$baseDir/testdata/conf/analyze_expression_metadata.csv"
  metadata_dragon = "$baseDir/testdata/conf/analyze_dragon_metadata.csv"

  zoo.animals = ['dragon','panda']//['panda','otter_lioness','panda_lioness','dragon_lioness']

  // parameters for TCGA
  zoo.motif = "$baseDir/testdata/other/test_motif_prior.txt"
  zoo.ppi = "$baseDir/testdata/other/test_ppi.txt"
  zoo.panda_lioness = "--with_header --fmt h5 --computing cpu --precision single --mode_process intersection --save_single_lioness  --as_adjacency --ignore_final"
  zoo.otter_lioness = " --fmt h5 --precision single --iterations 3"
  zoo.panda = "--with_header --as_adjacency --mode_process intersection"

  // parameters for GENIE3
  genie3.run_genie3 = false
  genie3.tf_list = "$baseDir/bin/r/local_assets/TF_names_v_1.01.txt"
  genie3.n_cores = 1
  genie3.tree_method = 'RF'
  genie3.n_trees = 1000
  genie3.k = 10

  wgcna.run_wgcna = false
  wgcna.power = 10

}

// include basic process configuration options
includeConfig 'conf/base.config'


trace.overwrite = true
report.overwrite = true
timeline.overwrite = true
dag.overwrite = true

conda.enabled = true