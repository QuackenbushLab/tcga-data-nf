// profile to test the workflow
params {

  batchName = 'test'

	batch_correction{
    tcga_luad = ['tcga.gdc_platform']
    tcga_paad = ['null']
    }

  dataDir = "testdata"
  logInfoFile = 'test-log-info.txt'

 
  full.tcga_project = 'tcga_luad'

  recount.metadata_prepare = 'testdata/prepare_recount_metadata.csv'
  recount.norm =['tpm']
  recount.min_tpm=[1]
  recount.frac_samples=[0.0001,0.2]
  recount.th_purity=[0.1]

  methylation.metadata_prepare = 'testdata/prepare_methylation_metadata.csv'

  // analysis parameters
  metadata_expression = "testdata/metadata_tcga_testdata.csv"
  metadata_dragon = "conf/metadata_dragon.csv"
  zoo.animals = ['panda','dragon','dragon_lioness'] //'panda','panda_lioness', 'dragon',
  zoo.motif = "$baseDir/testdata/test_motif_prior.txt"
  zoo.ppi = "$baseDir/testdata/test_ppi.txt"
  zoo.panda_lioness = "--with_header --fmt h5 --computing cpu --precision single --mode_process intersection --save_single_lioness  --as_adjacency --ignore_final"
  zoo.otter_lioness = " --fmt h5 --precision single --iterations 3"
  zoo.panda = "--with_header --as_adjacency --mode_process intersection"


  tissues{
    tcga_paad = ['all']
    tcga_luad = ['all']
    }

  
full_metadata = 'testdata/full_json.json'
download_metadata = 'testdata/download_json.json'




}

executor {
	name = 'local'
	cpus   = 16
	memory = 48.GB
}
	
process {	
	cpus = 4
	memory = 32.GB

}


dag{
  enable = true
  verbose = false//true
  file = 'dags/dag-test.html'
  direction = 'LR'
}