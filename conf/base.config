// basic information about the workflow
manifest {
  name = 'tcga-data-nf'
  description = 'Workflow to download and prepare TCGA data'
  version = '0.0.15'
  homePage = 'https://github.com/QuackenbushLab/tcga-data-nf.git'
  author = 'Viola Fanfani'
  nextflowVersion = '>=20.07.1'
}

// Default configuration
executor {
	name = 'local'
	cpus   = 8
	memory = 32.GB
}

process {
	executor = 'local'
	cpus = 8
	memory = 32.GB
	shell = ['/bin/bash', '-euo', 'pipefail']
}

// Export this variable to prevent local Python libraries 
// from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// PROFILE CONFIGURATIONS
profiles {

  // docker should be used whenever possible
  docker {
    docker.enabled         = true
    docker.userEmulation   = true
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false

    // specify the container to be used
    process.container = "violafanfani/tcga-data-nf:0.0.15"
  }
  
  singularity {
      singularity.enabled    = true
      singularity.autoMounts = true
      docker.enabled         = false
      podman.enabled         = false
      shifter.enabled        = false
      charliecloud.enabled   = false

      // specify the container to be used
      process.container = "violafanfani/tcga-data-nf:0.0.15"
  }

  // workstation config, ideal for developing the pipeline
  workstation { 
	includeConfig 'workstation.config' 
  }

  // Son of Grid Engine configuration
  sge {
	includeConfig 'sge.config'
  }

  // Son of Grid Engine configuration
  slurm {
	includeConfig 'slurm.config'
  }

  // GitHub actions configuration to run test pipeline
  ci {
	includeConfig 'ci.config'
  }

  conda {
        includeConfig 'conda.config'
        conda.enabled = true
    }

  // test profile defining some data
  test {
    params{
      profileName = 'test'
  pipeline = 'full'
  resultsDir = 'results'
  batchName = 'test_full'
  zoo.animals = ['panda','dragon']}
	includeConfig 'test.config'
  }


  // test analyze pipeline
  testAnalyze {
    params {
      profileName = 'testAnalyze'
      pipeline = 'analyze'
      resultsDir = 'results'
      batchName = 'test_analyze'
  }
	includeConfig 'test.config'
  }

  // test profile defining some data
  testDownload {
    params{
      profileName = 'testDownload'
      pipeline = 'download'
      resultsDir = 'results'
      batchName = 'test_download'
    }
	includeConfig 'test.config'
  }

  // test profile defining some data
  testPrepare {
    params{
      profileName = 'testPrepare'
      pipeline = 'prepare'
      resultsDir = 'results'
      batchName = 'test_prepare'
    }
	includeConfig 'test.config'
  }

}

// configuring log information
timeline {
  enabled = true
  file = "logs/execution_timeline.html"
}

report {
  enabled = true
  file = "logs/execution_report.html"
}

trace {
  enabled = true
  file = "logs/execution_trace.txt"
}

  
  dag
  {
    depth = -1
    direction = 'TB'
    verbose = false
  }
